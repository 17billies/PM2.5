#M=2
import numpy as np 
import matplotlib.pyplot as plt 
import math
import time

#calculate the runtime of the program
start_time = time.time()

#read the data which X features has add a new line 1 so means X_0
dataT=np.genfromtxt('data_T.csv',delimiter=',')
dataX=np.genfromtxt('data_X.csv',delimiter=',')

#split the data into training set and the testing set
def train_test_split(X,Y,test_size):
    X_train=np.array(X[:math.floor(len(X)*(1-test_size))])
    Y_train=np.array(Y[:math.floor(len(Y)*(1-test_size))])
    X_test=np.array(X[math.floor(len(X)*(1-test_size)):])
    Y_test=np.array(Y[math.floor(len(Y)*(1-test_size)):])
    Y_train=Y_train.reshape(1,len(Y_train))
    Y_test=Y_test.reshape(1,len(Y_test))
    return X_train, X_test, Y_train, Y_test

#append the dataX to match the theta
dataX=np.insert(dataX,18,values=dataX[:,1]*dataX[:,1],axis=1)
dataX=np.insert(dataX,19,values=dataX[:,2]*dataX[:,1],axis=1)
dataX=np.insert(dataX,20,values=dataX[:,2]*dataX[:,2],axis=1)
dataX=np.insert(dataX,21,values=dataX[:,3]*dataX[:,1],axis=1)
dataX=np.insert(dataX,22,values=dataX[:,3]*dataX[:,2],axis=1)
dataX=np.insert(dataX,23,values=dataX[:,3]*dataX[:,3],axis=1)
dataX=np.insert(dataX,24,values=dataX[:,4]*dataX[:,1],axis=1)
dataX=np.insert(dataX,25,values=dataX[:,4]*dataX[:,2],axis=1)
dataX=np.insert(dataX,26,values=dataX[:,4]*dataX[:,3],axis=1)
dataX=np.insert(dataX,27,values=dataX[:,4]*dataX[:,4],axis=1)
dataX=np.insert(dataX,28,values=dataX[:,5]*dataX[:,1],axis=1)
dataX=np.insert(dataX,29,values=dataX[:,5]*dataX[:,2],axis=1)
dataX=np.insert(dataX,30,values=dataX[:,5]*dataX[:,3],axis=1)
dataX=np.insert(dataX,31,values=dataX[:,5]*dataX[:,4],axis=1)
dataX=np.insert(dataX,32,values=dataX[:,5]*dataX[:,5],axis=1)
dataX=np.insert(dataX,33,values=dataX[:,6]*dataX[:,1],axis=1)
dataX=np.insert(dataX,34,values=dataX[:,6]*dataX[:,2],axis=1)
dataX=np.insert(dataX,35,values=dataX[:,6]*dataX[:,3],axis=1)
dataX=np.insert(dataX,36,values=dataX[:,6]*dataX[:,4],axis=1)
dataX=np.insert(dataX,37,values=dataX[:,6]*dataX[:,5],axis=1)
dataX=np.insert(dataX,38,values=dataX[:,6]*dataX[:,6],axis=1)
dataX=np.insert(dataX,39,values=dataX[:,7]*dataX[:,1],axis=1)
dataX=np.insert(dataX,40,values=dataX[:,7]*dataX[:,2],axis=1)
dataX=np.insert(dataX,41,values=dataX[:,7]*dataX[:,3],axis=1)
dataX=np.insert(dataX,42,values=dataX[:,7]*dataX[:,4],axis=1)
dataX=np.insert(dataX,43,values=dataX[:,7]*dataX[:,5],axis=1)
dataX=np.insert(dataX,44,values=dataX[:,7]*dataX[:,6],axis=1)
dataX=np.insert(dataX,45,values=dataX[:,7]*dataX[:,7],axis=1)
dataX=np.insert(dataX,46,values=dataX[:,8]*dataX[:,1],axis=1)
dataX=np.insert(dataX,47,values=dataX[:,8]*dataX[:,2],axis=1)
dataX=np.insert(dataX,48,values=dataX[:,8]*dataX[:,3],axis=1)
dataX=np.insert(dataX,49,values=dataX[:,8]*dataX[:,4],axis=1)
dataX=np.insert(dataX,50,values=dataX[:,8]*dataX[:,5],axis=1)
dataX=np.insert(dataX,51,values=dataX[:,8]*dataX[:,6],axis=1)
dataX=np.insert(dataX,52,values=dataX[:,8]*dataX[:,7],axis=1)
dataX=np.insert(dataX,53,values=dataX[:,8]*dataX[:,8],axis=1)
dataX=np.insert(dataX,54,values=dataX[:,9]*dataX[:,1],axis=1)
dataX=np.insert(dataX,55,values=dataX[:,9]*dataX[:,2],axis=1)
dataX=np.insert(dataX,56,values=dataX[:,9]*dataX[:,3],axis=1)
dataX=np.insert(dataX,57,values=dataX[:,9]*dataX[:,4],axis=1)
dataX=np.insert(dataX,58,values=dataX[:,9]*dataX[:,5],axis=1)
dataX=np.insert(dataX,59,values=dataX[:,9]*dataX[:,6],axis=1)
dataX=np.insert(dataX,60,values=dataX[:,9]*dataX[:,7],axis=1)
dataX=np.insert(dataX,61,values=dataX[:,9]*dataX[:,8],axis=1)
dataX=np.insert(dataX,62,values=dataX[:,9]*dataX[:,9],axis=1)
dataX=np.insert(dataX,63,values=dataX[:,10]*dataX[:,1],axis=1)
dataX=np.insert(dataX,64,values=dataX[:,10]*dataX[:,2],axis=1)
dataX=np.insert(dataX,65,values=dataX[:,10]*dataX[:,3],axis=1)
dataX=np.insert(dataX,66,values=dataX[:,10]*dataX[:,4],axis=1)
dataX=np.insert(dataX,67,values=dataX[:,10]*dataX[:,5],axis=1)
dataX=np.insert(dataX,68,values=dataX[:,10]*dataX[:,6],axis=1)
dataX=np.insert(dataX,69,values=dataX[:,10]*dataX[:,7],axis=1)
dataX=np.insert(dataX,70,values=dataX[:,10]*dataX[:,8],axis=1)
dataX=np.insert(dataX,71,values=dataX[:,10]*dataX[:,9],axis=1)
dataX=np.insert(dataX,72,values=dataX[:,10]*dataX[:,10],axis=1)
dataX=np.insert(dataX,73,values=dataX[:,11]*dataX[:,1],axis=1)
dataX=np.insert(dataX,74,values=dataX[:,11]*dataX[:,2],axis=1)
dataX=np.insert(dataX,75,values=dataX[:,11]*dataX[:,3],axis=1)
dataX=np.insert(dataX,76,values=dataX[:,11]*dataX[:,4],axis=1)
dataX=np.insert(dataX,77,values=dataX[:,11]*dataX[:,5],axis=1)
dataX=np.insert(dataX,78,values=dataX[:,11]*dataX[:,6],axis=1)
dataX=np.insert(dataX,79,values=dataX[:,11]*dataX[:,7],axis=1)
dataX=np.insert(dataX,80,values=dataX[:,11]*dataX[:,8],axis=1)
dataX=np.insert(dataX,81,values=dataX[:,11]*dataX[:,9],axis=1)
dataX=np.insert(dataX,82,values=dataX[:,11]*dataX[:,10],axis=1)
dataX=np.insert(dataX,83,values=dataX[:,11]*dataX[:,11],axis=1)
dataX=np.insert(dataX,84,values=dataX[:,12]*dataX[:,1],axis=1)
dataX=np.insert(dataX,85,values=dataX[:,12]*dataX[:,2],axis=1)
dataX=np.insert(dataX,86,values=dataX[:,12]*dataX[:,3],axis=1)
dataX=np.insert(dataX,87,values=dataX[:,12]*dataX[:,4],axis=1)
dataX=np.insert(dataX,88,values=dataX[:,12]*dataX[:,5],axis=1)
dataX=np.insert(dataX,89,values=dataX[:,12]*dataX[:,6],axis=1)
dataX=np.insert(dataX,90,values=dataX[:,12]*dataX[:,7],axis=1)
dataX=np.insert(dataX,91,values=dataX[:,12]*dataX[:,8],axis=1)
dataX=np.insert(dataX,92,values=dataX[:,12]*dataX[:,9],axis=1)
dataX=np.insert(dataX,93,values=dataX[:,12]*dataX[:,10],axis=1)
dataX=np.insert(dataX,94,values=dataX[:,12]*dataX[:,11],axis=1)
dataX=np.insert(dataX,95,values=dataX[:,12]*dataX[:,12],axis=1)
dataX=np.insert(dataX,96,values=dataX[:,13]*dataX[:,1],axis=1)
dataX=np.insert(dataX,97,values=dataX[:,13]*dataX[:,2],axis=1)
dataX=np.insert(dataX,98,values=dataX[:,13]*dataX[:,3],axis=1)
dataX=np.insert(dataX,99,values=dataX[:,13]*dataX[:,4],axis=1)
dataX=np.insert(dataX,100,values=dataX[:,13]*dataX[:,5],axis=1)
dataX=np.insert(dataX,101,values=dataX[:,13]*dataX[:,6],axis=1)
dataX=np.insert(dataX,102,values=dataX[:,13]*dataX[:,7],axis=1)
dataX=np.insert(dataX,103,values=dataX[:,13]*dataX[:,8],axis=1)
dataX=np.insert(dataX,104,values=dataX[:,13]*dataX[:,9],axis=1)
dataX=np.insert(dataX,105,values=dataX[:,13]*dataX[:,10],axis=1)
dataX=np.insert(dataX,106,values=dataX[:,13]*dataX[:,11],axis=1)
dataX=np.insert(dataX,107,values=dataX[:,13]*dataX[:,12],axis=1)
dataX=np.insert(dataX,108,values=dataX[:,13]*dataX[:,13],axis=1)
dataX=np.insert(dataX,109,values=dataX[:,14]*dataX[:,1],axis=1)
dataX=np.insert(dataX,110,values=dataX[:,14]*dataX[:,2],axis=1)
dataX=np.insert(dataX,111,values=dataX[:,14]*dataX[:,3],axis=1)
dataX=np.insert(dataX,112,values=dataX[:,14]*dataX[:,4],axis=1)
dataX=np.insert(dataX,113,values=dataX[:,14]*dataX[:,5],axis=1)
dataX=np.insert(dataX,114,values=dataX[:,14]*dataX[:,6],axis=1)
dataX=np.insert(dataX,115,values=dataX[:,14]*dataX[:,7],axis=1)
dataX=np.insert(dataX,116,values=dataX[:,14]*dataX[:,8],axis=1)
dataX=np.insert(dataX,117,values=dataX[:,14]*dataX[:,9],axis=1)
dataX=np.insert(dataX,118,values=dataX[:,14]*dataX[:,10],axis=1)
dataX=np.insert(dataX,119,values=dataX[:,14]*dataX[:,11],axis=1)
dataX=np.insert(dataX,120,values=dataX[:,14]*dataX[:,12],axis=1)
dataX=np.insert(dataX,121,values=dataX[:,14]*dataX[:,13],axis=1)
dataX=np.insert(dataX,122,values=dataX[:,14]*dataX[:,14],axis=1)
dataX=np.insert(dataX,123,values=dataX[:,15]*dataX[:,1],axis=1)
dataX=np.insert(dataX,124,values=dataX[:,15]*dataX[:,2],axis=1)
dataX=np.insert(dataX,125,values=dataX[:,15]*dataX[:,3],axis=1)
dataX=np.insert(dataX,126,values=dataX[:,15]*dataX[:,4],axis=1)
dataX=np.insert(dataX,127,values=dataX[:,15]*dataX[:,5],axis=1)
dataX=np.insert(dataX,128,values=dataX[:,15]*dataX[:,6],axis=1)
dataX=np.insert(dataX,129,values=dataX[:,15]*dataX[:,7],axis=1)
dataX=np.insert(dataX,130,values=dataX[:,15]*dataX[:,8],axis=1)
dataX=np.insert(dataX,131,values=dataX[:,15]*dataX[:,9],axis=1)
dataX=np.insert(dataX,132,values=dataX[:,15]*dataX[:,10],axis=1)
dataX=np.insert(dataX,133,values=dataX[:,15]*dataX[:,11],axis=1)
dataX=np.insert(dataX,134,values=dataX[:,15]*dataX[:,12],axis=1)
dataX=np.insert(dataX,135,values=dataX[:,15]*dataX[:,13],axis=1)
dataX=np.insert(dataX,136,values=dataX[:,15]*dataX[:,14],axis=1)
dataX=np.insert(dataX,137,values=dataX[:,15]*dataX[:,15],axis=1)
dataX=np.insert(dataX,138,values=dataX[:,16]*dataX[:,1],axis=1)
dataX=np.insert(dataX,139,values=dataX[:,16]*dataX[:,2],axis=1)
dataX=np.insert(dataX,140,values=dataX[:,16]*dataX[:,3],axis=1)
dataX=np.insert(dataX,141,values=dataX[:,16]*dataX[:,4],axis=1)
dataX=np.insert(dataX,142,values=dataX[:,16]*dataX[:,5],axis=1)
dataX=np.insert(dataX,143,values=dataX[:,16]*dataX[:,6],axis=1)
dataX=np.insert(dataX,144,values=dataX[:,16]*dataX[:,7],axis=1)
dataX=np.insert(dataX,145,values=dataX[:,16]*dataX[:,8],axis=1)
dataX=np.insert(dataX,146,values=dataX[:,16]*dataX[:,9],axis=1)
dataX=np.insert(dataX,147,values=dataX[:,16]*dataX[:,10],axis=1)
dataX=np.insert(dataX,148,values=dataX[:,16]*dataX[:,11],axis=1)
dataX=np.insert(dataX,149,values=dataX[:,16]*dataX[:,12],axis=1)
dataX=np.insert(dataX,150,values=dataX[:,16]*dataX[:,13],axis=1)
dataX=np.insert(dataX,151,values=dataX[:,16]*dataX[:,14],axis=1)
dataX=np.insert(dataX,152,values=dataX[:,16]*dataX[:,15],axis=1)
dataX=np.insert(dataX,153,values=dataX[:,16]*dataX[:,16],axis=1)
dataX=np.insert(dataX,154,values=dataX[:,17]*dataX[:,1],axis=1)
dataX=np.insert(dataX,155,values=dataX[:,17]*dataX[:,2],axis=1)
dataX=np.insert(dataX,156,values=dataX[:,17]*dataX[:,3],axis=1)
dataX=np.insert(dataX,157,values=dataX[:,17]*dataX[:,4],axis=1)
dataX=np.insert(dataX,158,values=dataX[:,17]*dataX[:,5],axis=1)
dataX=np.insert(dataX,159,values=dataX[:,17]*dataX[:,6],axis=1)
dataX=np.insert(dataX,160,values=dataX[:,17]*dataX[:,7],axis=1)
dataX=np.insert(dataX,161,values=dataX[:,17]*dataX[:,8],axis=1)
dataX=np.insert(dataX,162,values=dataX[:,17]*dataX[:,9],axis=1)
dataX=np.insert(dataX,163,values=dataX[:,17]*dataX[:,10],axis=1)
dataX=np.insert(dataX,164,values=dataX[:,17]*dataX[:,11],axis=1)
dataX=np.insert(dataX,165,values=dataX[:,17]*dataX[:,12],axis=1)
dataX=np.insert(dataX,166,values=dataX[:,17]*dataX[:,13],axis=1)
dataX=np.insert(dataX,167,values=dataX[:,17]*dataX[:,14],axis=1)
dataX=np.insert(dataX,168,values=dataX[:,17]*dataX[:,15],axis=1)
dataX=np.insert(dataX,169,values=dataX[:,17]*dataX[:,16],axis=1)
dataX=np.insert(dataX,170,values=dataX[:,17]*dataX[:,17],axis=1)

#hypothesis function
def hypothesis(theta,X):
    return np.matmul(theta,np.transpose(X))



#parameter:
learning_rate=0.000039
iteration=50000
theta=np.ones((1,171))
print(hypothesis(theta,dataX))
print(np.shape(hypothesis(theta,dataX)))
#split the data into training set and the testing set
#X_train,X_test,T_train,T_test = train_test_split(dataX,dataT, test_size = 0.2)